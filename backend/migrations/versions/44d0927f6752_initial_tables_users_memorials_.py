"""Initial tables: users, memorials, obituaries, photos, speeches, etc

Revision ID: 44d0927f6752
Revises: 
Create Date: 2025-08-12 11:58:49.524913

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44d0927f6752'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('memorials',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('guest_session', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'IN_PROGRESS', 'COMPLETED', 'PUBLISHED', name='memorialstatus'), nullable=False),
    sa.Column('current_step', sa.String(length=50), nullable=False),
    sa.Column('completed_steps', sa.JSON(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('deceased_name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('pdf_generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('memorials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_memorials_guest_session'), ['guest_session'], unique=False)
        batch_op.create_index(batch_op.f('ix_memorials_user_id'), ['user_id'], unique=False)

    op.create_table('acknowledgements',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('acknowledgment_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('memorial_id')
    )
    op.create_table('body_viewings',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('has_viewing', sa.Boolean(), nullable=True),
    sa.Column('viewing_date', sa.Date(), nullable=True),
    sa.Column('viewing_start_time', sa.String(length=20), nullable=True),
    sa.Column('viewing_end_time', sa.String(length=20), nullable=True),
    sa.Column('viewing_location', sa.String(length=500), nullable=True),
    sa.Column('viewing_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('memorial_id')
    )
    op.create_table('burial_locations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('burial_type', sa.String(length=50), nullable=True),
    sa.Column('cemetery_name', sa.String(length=200), nullable=True),
    sa.Column('burial_address', sa.String(length=500), nullable=True),
    sa.Column('burial_date', sa.Date(), nullable=True),
    sa.Column('burial_time', sa.String(length=20), nullable=True),
    sa.Column('burial_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('memorial_id')
    )
    op.create_table('obituaries',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('death_date', sa.Date(), nullable=True),
    sa.Column('birth_place', sa.String(length=200), nullable=True),
    sa.Column('life_story', sa.Text(), nullable=True),
    sa.Column('survived_by', sa.Text(), nullable=True),
    sa.Column('preceded_by', sa.Text(), nullable=True),
    sa.Column('tone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('memorial_id')
    )
    op.create_table('photos',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('photo_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repass_locations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('has_repass', sa.Boolean(), nullable=True),
    sa.Column('venue_name', sa.String(length=200), nullable=True),
    sa.Column('repass_address', sa.String(length=500), nullable=True),
    sa.Column('repass_date', sa.Date(), nullable=True),
    sa.Column('repass_time', sa.String(length=20), nullable=True),
    sa.Column('repass_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('memorial_id')
    )
    op.create_table('speeches',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('memorial_id', sa.String(length=36), nullable=False),
    sa.Column('speaker_name', sa.String(length=200), nullable=False),
    sa.Column('relationship', sa.String(length=100), nullable=True),
    sa.Column('speech_type', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['memorial_id'], ['memorials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('speeches')
    op.drop_table('repass_locations')
    op.drop_table('photos')
    op.drop_table('obituaries')
    op.drop_table('burial_locations')
    op.drop_table('body_viewings')
    op.drop_table('acknowledgements')
    with op.batch_alter_table('memorials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_memorials_user_id'))
        batch_op.drop_index(batch_op.f('ix_memorials_guest_session'))

    op.drop_table('memorials')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
